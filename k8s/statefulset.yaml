apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flask-db
spec:
  serviceName: flask-db
  replicas: 1
  selector:
    matchLabels:
      app: flask-db
  template:
    metadata:
      labels:
        app: flask-db
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - flask-app
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: flask-db
        image: mysql
        envFrom:
        - configMapRef:
            name: db-config
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_DATABASE
        volumeMounts:
        - name: mysql-pvc
            mountPath: /var/lib/mysql
        ports:
        - containerPort: 3306
  volumeClaimTemplates:
  - metadata:
      name: mysql-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi